name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: smiley_food_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install server dependencies
      run: cd server && npm ci

    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Don't fail build on lint errors for now

    - name: Build application
      run: npm run build

    - name: Run tests
      run: npm run test:run

    - name: Test server
      run: cd server && npm test
      if: false  # Disable until tests are implemented
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/smiley_food_test
        JWT_SECRET: test-secret

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: dist/
        retention-days: 30

    # Uncomment and configure when ready to deploy
    # - name: Deploy to staging
    #   if: github.ref == 'refs/heads/develop'
    #   run: echo "Deploy to staging"
    
    # - name: Deploy to production
    #   if: github.ref == 'refs/heads/main'
    #   run: echo "Deploy to production"